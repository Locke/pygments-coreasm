CoreASM MyFoo

use Options
use Time

option DebugInfo.activeChannels ALL

include "bar.coreasm"

init Foo

function sBPMFunction : NUMBER * STRING -> RULE

rule Foo(x) = {
  while (i < 5 + (2*3/4)) do {
    if (x = true and y != undef) then {
      shift right value into loc
      //not good
      /*
      at least not undef
      */
      Crash()
    }
    else { print "asdf: " + (1 + 12.37 + |{"a", {4 -> undef}}|) }
  }
}
 
derived spameggs = return fish in {
  debuginfo LOG "baking spam-eggs"
  let x = foo(y) in {
    print "x = " + x
    banana(foo, bar) := fooBanana(x, z)
    fish := << spam | spam in eggs with |spam| < x >>
  }
}

rule InitRule =
  par
    terminate := false
    program(self) := @MainProgram
    program(foo) := ruleelement MainProgram
  endpar

rule MainProgram =
  if not terminate then
    par
      print "This is CoreASM."
      terminate := true
    endpar
  else
    program(self) := undef

